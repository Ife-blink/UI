"use strict";
exports.__esModule = true;
exports.getSingleTreasury = exports.getProfile = exports.getBuddy = exports.getOrganization = void 0;
var tslib_1 = require("tslib");
var pda_1 = require("../../../utils/pda");
var type_1 = require("../../../utils/type");
var getOrganization = function (program, organizationName) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
    var organizationPDA, organizationAccount;
    return tslib_1.__generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                organizationPDA = (0, pda_1.getOrganizationPDA)(program, organizationName.toLowerCase());
                return [4 /*yield*/, program.account.organization.fetchNullable(organizationPDA)];
            case 1:
                organizationAccount = _a.sent();
                if (!organizationAccount)
                    throw type_1.ORGANIZATION_NOT_EXIST.replace("{}", organizationName.toLowerCase());
                return [2 /*return*/, tslib_1.__assign({ pda: organizationPDA }, organizationAccount)];
        }
    });
}); };
exports.getOrganization = getOrganization;
var getBuddy = function (program, name) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
    var buddyPDA, buddyAccount;
    return tslib_1.__generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (!name)
                    return [2 /*return*/, null];
                buddyPDA = (0, pda_1.getBuddyPDA)(program, name.toLowerCase());
                return [4 /*yield*/, program.account.buddy.fetchNullable(buddyPDA)];
            case 1:
                buddyAccount = _a.sent();
                return [2 /*return*/, buddyAccount ? tslib_1.__assign({ pda: buddyPDA }, buddyAccount) : null];
        }
    });
}); };
exports.getBuddy = getBuddy;
var getProfile = function (program, wallet) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
    var buddyProfile;
    return tslib_1.__generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, program.account.buddy.all([
                    { memcmp: { offset: 8, bytes: wallet.toBase58() } },
                ])];
            case 1:
                buddyProfile = (_a.sent())[0];
                return [2 /*return*/, buddyProfile ? tslib_1.__assign({ pda: buddyProfile.publicKey }, buddyProfile.account) : null];
        }
    });
}); };
exports.getProfile = getProfile;
var getSingleTreasury = function (program, owner, mint) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
    var treasuryPDA, treasury;
    return tslib_1.__generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                treasuryPDA = (0, pda_1.getTreasuryPDA)(program, [owner], [10000], mint);
                return [4 /*yield*/, program.account.treasury.fetchNullable(treasuryPDA)];
            case 1:
                treasury = _a.sent();
                return [2 /*return*/, treasury ? (tslib_1.__assign({ pda: treasuryPDA }, treasury)) : null];
        }
    });
}); };
exports.getSingleTreasury = getSingleTreasury;
//# sourceMappingURL=utils.js.map