import { __assign, __awaiter, __generator } from "tslib";
import { initTreasury } from "../../instructions/init/initTreasury";
import { getAmbassadorPDA, getBuddyPDA, getMemberPDA, getTreasuryPDA, } from "../../utils/pda";
import { BUDDY_DOESNT_EXIST, NO_WALLET_ERROR, USDC_MINT, } from "../../utils/type";
import { parsePublicKey } from "../../utils/parse";
import { initOrganization, } from "../../instructions/init/initOrganization";
import { initProfile } from "../../instructions/init/initProfile";
import { initMember } from "../../instructions/init/initMember";
import { Client } from "../Client";
import { initMasterTreasury } from "../../instructions/init/initMasterTreasury";
import { initMemberStatistics } from "../../instructions/init/initMemberStatistics";
import { getBuddy, getOrganization, getProfile, getSingleTreasury } from "./utils/utils";
var Initializer = /** @class */ (function () {
    function Initializer(program, wallet) {
        this.program = program;
        this.wallet = wallet;
    }
    Initializer.prototype.inject = function (usdcMint) {
        this.usdcMint = usdcMint;
        return this;
    };
    Initializer.prototype.isReferrerValid = function (referrerHash, organizationName) {
        return __awaiter(this, void 0, void 0, function () {
            var isMember, memberPDA, refNames, refPDAs, _i, refNames_1, name_1, i, buddy;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!referrerHash)
                            return [2 /*return*/, false];
                        return [4 /*yield*/, this.isReferrerMember(organizationName === null || organizationName === void 0 ? void 0 : organizationName.toLowerCase(), referrerHash)];
                    case 1:
                        isMember = _a.sent();
                        if (!isMember) return [3 /*break*/, 3];
                        memberPDA = getMemberPDA(this.program, organizationName === null || organizationName === void 0 ? void 0 : organizationName.toLowerCase(), referrerHash);
                        return [4 /*yield*/, this.program.account.member.fetchNullable(memberPDA)];
                    case 2: return [2 /*return*/, !!(_a.sent())];
                    case 3:
                        refNames = Client.decryptHash(referrerHash)[0];
                        refPDAs = [];
                        for (_i = 0, refNames_1 = refNames; _i < refNames_1.length; _i++) {
                            name_1 = refNames_1[_i];
                            refPDAs.push(getBuddyPDA(this.program, name_1));
                        }
                        i = 0;
                        _a.label = 4;
                    case 4:
                        if (!(i < refPDAs.length)) return [3 /*break*/, 7];
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(refPDAs[i])];
                    case 5:
                        buddy = _a.sent();
                        if (!buddy)
                            return [2 /*return*/, false];
                        _a.label = 6;
                    case 6:
                        i++;
                        return [3 /*break*/, 4];
                    case 7: return [2 /*return*/, true];
                }
            });
        });
    };
    Initializer.prototype.createMasterTreasury = function (mint) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        return [4 /*yield*/, initMasterTreasury(this.program, this.wallet, mint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Initializer.prototype.createMemberStatistics = function (organizationName, memberName) {
        return __awaiter(this, void 0, void 0, function () {
            var organization;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        return [4 /*yield*/, getOrganization(this.program, organizationName)];
                    case 1:
                        organization = _a.sent();
                        return [4 /*yield*/, initMemberStatistics(this.program, this.wallet, memberName, organization)];
                    case 2: return [2 /*return*/, [_a.sent()]];
                }
            });
        });
    };
    // Allows to create an extra treasury apart from the mainTokenMint of the organization
    Initializer.prototype.createMemberWithRewards = function (organizationName, memberName, rewardsMint, referrerHash, // can be member name or buddy name or shared treasury
    payer, buddyName) {
        if (rewardsMint === void 0) { rewardsMint = null; }
        if (payer === void 0) { payer = null; }
        return __awaiter(this, void 0, void 0, function () {
            var instructions, organization, buddyProfile, buddy, isReferrerMember, creatingBuddyPDA, buddyProfileName, buddyReferrer, _a, _b, _c, _d, buddyPDA, profilePDA, treasury, _e, _f, _g, treasuryRewards, _h, _j, _k, referrerTreasuryPDA, _l, refNames, shares, refPDAs, _i, refNames_2, name_2, referrerTreasury, _m, _o, _p, referrerTreasuryRewardsPDA, referrerTreasuryRewards, _q, _r, _s, firstBuddy, i, buddy_1, ownerTreasuryPDA, member, referrerMemberName, _t, _u, memberPDA, member, treasury_1, referrerTreasuryRewardsPDA, referrerTreasuryRewards, _v, _w, _x, _y, _z;
            return __generator(this, function (_0) {
                switch (_0.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        instructions = [];
                        return [4 /*yield*/, getOrganization(this.program, organizationName)];
                    case 1:
                        organization = _0.sent();
                        return [4 /*yield*/, getProfile(this.program, this.wallet)];
                    case 2:
                        buddyProfile = _0.sent();
                        buddy = null;
                        if (!buddyProfile) return [3 /*break*/, 4];
                        return [4 /*yield*/, getBuddy(this.program, buddyName || memberName)];
                    case 3:
                        buddy = (_0.sent()) || buddyProfile;
                        _0.label = 4;
                    case 4: return [4 /*yield*/, this.isReferrerMember(organizationName.toLowerCase(), referrerHash)];
                    case 5:
                        isReferrerMember = _0.sent();
                        creatingBuddyPDA = null;
                        if (!!buddyProfile) return [3 /*break*/, 10];
                        buddyProfileName = buddyName ? buddyName : Client.generateProfileName();
                        if (!isReferrerMember) return [3 /*break*/, 7];
                        return [4 /*yield*/, this.getBuddyReferrer(organizationName.toLowerCase(), referrerHash)];
                    case 6:
                        _a = _0.sent();
                        return [3 /*break*/, 8];
                    case 7:
                        _a = referrerHash;
                        _0.label = 8;
                    case 8:
                        buddyReferrer = _a;
                        _c = (_b = instructions.push).apply;
                        _d = [instructions];
                        return [4 /*yield*/, this.createProfile(buddyProfileName, buddyReferrer, parsePublicKey(organization.mainTokenMint)
                                ? organization.mainTokenMint
                                : undefined, payer)];
                    case 9:
                        _c.apply(_b, _d.concat([(_0.sent())]));
                        creatingBuddyPDA = getBuddyPDA(this.program, buddyProfileName);
                        _0.label = 10;
                    case 10:
                        buddyPDA = creatingBuddyPDA || (buddy === null || buddy === void 0 ? void 0 : buddy.pda);
                        profilePDA = creatingBuddyPDA || (buddyProfile === null || buddyProfile === void 0 ? void 0 : buddyProfile.pda);
                        return [4 /*yield*/, getSingleTreasury(this.program, buddyPDA, parsePublicKey(organization.mainTokenMint))];
                    case 11:
                        treasury = _0.sent();
                        if (!!treasury) return [3 /*break*/, 13];
                        _f = (_e = instructions.push).apply;
                        _g = [instructions];
                        return [4 /*yield*/, this.createTreasuryByBuddyPDA(buddyPDA, parsePublicKey(organization.mainTokenMint)
                                ? organization.mainTokenMint
                                : undefined)];
                    case 12:
                        _f.apply(_e, _g.concat([(_0.sent())]));
                        _0.label = 13;
                    case 13:
                        if (!(rewardsMint &&
                            rewardsMint.toString() !== organization.mainTokenMint.toString())) return [3 /*break*/, 16];
                        return [4 /*yield*/, getSingleTreasury(this.program, buddyPDA, parsePublicKey(rewardsMint))];
                    case 14:
                        treasuryRewards = _0.sent();
                        if (!!treasuryRewards) return [3 /*break*/, 16];
                        _j = (_h = instructions.push).apply;
                        _k = [instructions];
                        return [4 /*yield*/, this.createTreasuryByBuddyPDA(buddyPDA, parsePublicKey(rewardsMint) ? rewardsMint : undefined)];
                    case 15:
                        _j.apply(_h, _k.concat([(_0.sent())]));
                        _0.label = 16;
                    case 16:
                        referrerTreasuryPDA = null;
                        if (!referrerHash) return [3 /*break*/, 37];
                        _l = Client.decryptHash(referrerHash), refNames = _l[0], shares = _l[1];
                        if (!!isReferrerMember) return [3 /*break*/, 30];
                        refPDAs = [];
                        for (_i = 0, refNames_2 = refNames; _i < refNames_2.length; _i++) {
                            name_2 = refNames_2[_i];
                            refPDAs.push(getBuddyPDA(this.program, name_2));
                        }
                        referrerTreasuryPDA = getTreasuryPDA(this.program, refPDAs, shares, parsePublicKey(organization.mainTokenMint));
                        if (!!creatingBuddyPDA) return [3 /*break*/, 19];
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(referrerTreasuryPDA)];
                    case 17:
                        referrerTreasury = _0.sent();
                        if (!!referrerTreasury) return [3 /*break*/, 19];
                        _o = (_m = instructions.push).apply;
                        _p = [instructions];
                        return [4 /*yield*/, this.createSharedTreasuryByPDA(refPDAs, shares, parsePublicKey(organization.mainTokenMint)
                                ? organization.mainTokenMint
                                : undefined, payer)];
                    case 18:
                        _o.apply(_m, _p.concat([(_0.sent())]));
                        _0.label = 19;
                    case 19:
                        if (!(rewardsMint &&
                            rewardsMint.toString() !== organization.mainTokenMint.toString())) return [3 /*break*/, 22];
                        referrerTreasuryRewardsPDA = getTreasuryPDA(this.program, refPDAs, shares, parsePublicKey(rewardsMint));
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(referrerTreasuryRewardsPDA)];
                    case 20:
                        referrerTreasuryRewards = _0.sent();
                        if (!!referrerTreasuryRewards) return [3 /*break*/, 22];
                        _r = (_q = instructions.push).apply;
                        _s = [instructions];
                        return [4 /*yield*/, this.createSharedTreasuryByPDA(refPDAs, shares, parsePublicKey(rewardsMint) ? rewardsMint : undefined, payer)];
                    case 21:
                        _r.apply(_q, _s.concat([(_0.sent())]));
                        _0.label = 22;
                    case 22:
                        firstBuddy = null;
                        i = 0;
                        _0.label = 23;
                    case 23:
                        if (!(i < refPDAs.length)) return [3 /*break*/, 26];
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(refPDAs[i])];
                    case 24:
                        buddy_1 = _0.sent();
                        if (!buddy_1) {
                            referrerTreasuryPDA = null;
                            return [3 /*break*/, 26];
                        }
                        if (i === 0)
                            firstBuddy = buddy_1;
                        _0.label = 25;
                    case 25:
                        i++;
                        return [3 /*break*/, 23];
                    case 26:
                        if (!(referrerTreasuryPDA && firstBuddy)) return [3 /*break*/, 29];
                        ownerTreasuryPDA = referrerTreasuryPDA = getTreasuryPDA(this.program, refPDAs, shares, parsePublicKey(organization.mainTokenMint));
                        return [4 /*yield*/, this.program.account.member.all([
                                { memcmp: { offset: 41, bytes: ownerTreasuryPDA.toBase58() } },
                            ])];
                    case 27:
                        member = (_0.sent())[0];
                        if (!!member) return [3 /*break*/, 29];
                        referrerMemberName = referrerHash.endsWith('$') ? Client.generateMemberName() : referrerHash;
                        _u = (_t = instructions).push;
                        return [4 /*yield*/, this.createReferrerMember(organization, referrerMemberName, __assign({ pda: refPDAs[0] }, firstBuddy), payer)];
                    case 28:
                        _u.apply(_t, [_0.sent()]);
                        _0.label = 29;
                    case 29: return [3 /*break*/, 37];
                    case 30:
                        memberPDA = getMemberPDA(this.program, organizationName.toLowerCase(), refNames[0]);
                        return [4 /*yield*/, this.program.account.member.fetchNullable(memberPDA)];
                    case 31:
                        member = _0.sent();
                        if (!member) return [3 /*break*/, 36];
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(member.owner)];
                    case 32:
                        treasury_1 = _0.sent();
                        if (!treasury_1) return [3 /*break*/, 35];
                        referrerTreasuryPDA = member.owner;
                        if (!(rewardsMint &&
                            rewardsMint.toString() !== organization.mainTokenMint.toString())) return [3 /*break*/, 35];
                        referrerTreasuryRewardsPDA = getTreasuryPDA(this.program, [treasury_1.owners[0].ownerPda], [10000], parsePublicKey(rewardsMint));
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(referrerTreasuryRewardsPDA)];
                    case 33:
                        referrerTreasuryRewards = _0.sent();
                        if (!!referrerTreasuryRewards) return [3 /*break*/, 35];
                        _w = (_v = instructions.push).apply;
                        _x = [instructions];
                        return [4 /*yield*/, this.createSharedTreasuryByPDA([treasury_1.owners[0].ownerPda], [10000], parsePublicKey(rewardsMint) ? rewardsMint : undefined, payer)];
                    case 34:
                        _w.apply(_v, _x.concat([(_0.sent())]));
                        _0.label = 35;
                    case 35: return [3 /*break*/, 37];
                    case 36:
                        referrerTreasuryPDA = null;
                        _0.label = 37;
                    case 37:
                        _z = (_y = instructions).push;
                        return [4 /*yield*/, initMember(this.program, this.wallet, memberName.toLowerCase(), organization, buddyPDA, profilePDA, (buddy === null || buddy === void 0 ? void 0 : buddy.referrerTreasuryPda) || null, referrerTreasuryPDA, (buddyProfile === null || buddyProfile === void 0 ? void 0 : buddyProfile.authority) || null, payer)];
                    case 38:
                        _z.apply(_y, [_0.sent()]);
                        return [2 /*return*/, instructions];
                }
            });
        });
    };
    Initializer.prototype.createMember = function (organizationName, memberName, referrerHash, // can be member name or buddy name or shared treasury
    payer, buddyName) {
        if (payer === void 0) { payer = null; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createMemberWithRewards(organizationName.toLowerCase(), memberName.toLowerCase(), null, referrerHash, payer, buddyName)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Initializer.prototype.createReferrerMember = function (organization, memberName, buddy, payer) {
        var _a;
        if (payer === void 0) { payer = null; }
        return __awaiter(this, void 0, void 0, function () {
            var buddyProfile, mainBuddy, fetchedBuddyProfile;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        if (!buddy)
                            throw BUDDY_DOESNT_EXIST;
                        buddyProfile = null;
                        mainBuddy = null;
                        if (!!((_a = buddy === null || buddy === void 0 ? void 0 : buddy.buddyType) === null || _a === void 0 ? void 0 : _a.profile)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(buddy.authority)];
                    case 1:
                        fetchedBuddyProfile = _b.sent();
                        buddyProfile = __assign({ pda: buddy.authority }, fetchedBuddyProfile);
                        mainBuddy = __assign({}, buddy);
                        return [3 /*break*/, 3];
                    case 2:
                        buddyProfile = __assign({}, buddy);
                        mainBuddy = __assign({}, buddy);
                        _b.label = 3;
                    case 3: return [4 /*yield*/, initMember(this.program, this.wallet, memberName.toLowerCase(), organization, mainBuddy.pda, buddyProfile.pda, mainBuddy.referrerTreasuryPda, null, buddyProfile.authority, payer)];
                    case 4: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    Initializer.prototype.createProfile = function (buddyName, referralHash, // assumes always buddy
    mint, payer) {
        if (payer === void 0) { payer = null; }
        return __awaiter(this, void 0, void 0, function () {
            var instructions, referrerTreasuryPDA, _a, owners, shares, buddyPDAs, fetchBuddies, _i, owners_1, name_3, budPDA, buddies, referrerTreasury, _b, _c, _d, _e, _f;
            return __generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        instructions = [];
                        if (!referralHash) return [3 /*break*/, 4];
                        _a = Client.decryptHash(referralHash), owners = _a[0], shares = _a[1];
                        buddyPDAs = [];
                        fetchBuddies = [];
                        for (_i = 0, owners_1 = owners; _i < owners_1.length; _i++) {
                            name_3 = owners_1[_i];
                            budPDA = getBuddyPDA(this.program, name_3);
                            buddyPDAs.push(budPDA);
                            fetchBuddies.push(this.program.account.buddy.fetchNullable(budPDA));
                        }
                        return [4 /*yield*/, Promise.all(fetchBuddies)];
                    case 1:
                        buddies = _g.sent();
                        if (!!buddies.some(function (bud) { return bud === null; })) return [3 /*break*/, 4];
                        referrerTreasuryPDA = getTreasuryPDA(this.program, buddyPDAs, shares, parsePublicKey(mint));
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(referrerTreasuryPDA)];
                    case 2:
                        referrerTreasury = _g.sent();
                        if (!!referrerTreasury) return [3 /*break*/, 4];
                        _c = (_b = instructions.push).apply;
                        _d = [instructions];
                        return [4 /*yield*/, this.createSharedTreasuryByPDA(buddyPDAs, shares, mint, payer)];
                    case 3:
                        _c.apply(_b, _d.concat([(_g.sent())]));
                        _g.label = 4;
                    case 4:
                        _f = (_e = instructions).push;
                        return [4 /*yield*/, initProfile(this.program, this.wallet, buddyName.toLowerCase(), referrerTreasuryPDA, payer)];
                    case 5:
                        _f.apply(_e, [_g.sent()]);
                        return [2 /*return*/, instructions];
                }
            });
        });
    };
    Initializer.prototype.createOrganization = function (name, options, ambassadorName) {
        return __awaiter(this, void 0, void 0, function () {
            var ambassadorPDA, ambassadorBPS, masterOrg;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        ambassadorPDA = null, ambassadorBPS = null;
                        if (!ambassadorName) return [3 /*break*/, 2];
                        ambassadorPDA = getAmbassadorPDA(this.program, ambassadorName.toLowerCase());
                        return [4 /*yield*/, this.program.account.masterOrganization.all()];
                    case 1:
                        masterOrg = (_a.sent())[0];
                        ambassadorBPS = masterOrg.account.ambassadorShareKeptInBps;
                        _a.label = 2;
                    case 2: return [4 /*yield*/, initOrganization(this.program, this.wallet, name.toLowerCase(), options, ambassadorPDA, ambassadorBPS, this.usdcMint ? this.usdcMint : USDC_MINT)];
                    case 3: return [2 /*return*/, [
                            _a.sent()
                        ]];
                }
            });
        });
    };
    Initializer.prototype.createSharedTreasuryByHash = function (hash, mint) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, buddyNames, shares;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = Client.decryptHash(hash), buddyNames = _a[0], shares = _a[1];
                        return [4 /*yield*/, this.createSharedTreasuryByName(buddyNames, shares, mint)];
                    case 1: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    Initializer.prototype.createTreasuryByName = function (buddyName, mint) {
        return __awaiter(this, void 0, void 0, function () {
            var buddyPDA;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        buddyPDA = getBuddyPDA(this.program, buddyName.toLowerCase());
                        return [4 /*yield*/, this.createTreasuryByBuddyPDA(buddyPDA, mint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Initializer.prototype.createTreasuryByBuddyPDA = function (buddyPDA, mint, payer) {
        if (payer === void 0) { payer = null; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        return [4 /*yield*/, initTreasury(this.program, this.wallet, [buddyPDA], [10000], parsePublicKey(mint), payer)];
                    case 1: return [2 /*return*/, [
                            _a.sent()
                        ]];
                }
            });
        });
    };
    Initializer.prototype.createSharedTreasuryByName = function (buddyNames, shares, mint) {
        return __awaiter(this, void 0, void 0, function () {
            var buddyPDAs, _i, buddyNames_1, name_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        buddyPDAs = [];
                        for (_i = 0, buddyNames_1 = buddyNames; _i < buddyNames_1.length; _i++) {
                            name_4 = buddyNames_1[_i];
                            buddyPDAs.push(getBuddyPDA(this.program, name_4.toLowerCase()));
                        }
                        return [4 /*yield*/, this.createSharedTreasuryByPDA(buddyPDAs, shares, mint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Initializer.prototype.createSharedTreasuryByPDA = function (buddyPDAs, shares, mint, payer) {
        if (payer === void 0) { payer = null; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        return [4 /*yield*/, initTreasury(this.program, this.wallet, buddyPDAs, shares, parsePublicKey(mint), payer)];
                    case 1: return [2 /*return*/, [
                            _a.sent()
                        ]];
                }
            });
        });
    };
    Initializer.prototype.getBuddyReferrer = function (organizationName, referrerHash) {
        return __awaiter(this, void 0, void 0, function () {
            var owners, memberPDA, member, treasury, buddy;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(referrerHash && !referrerHash.endsWith("$"))) return [3 /*break*/, 4];
                        owners = Client.decryptHash(referrerHash)[0];
                        memberPDA = getMemberPDA(this.program, organizationName.toLowerCase(), owners[0]);
                        return [4 /*yield*/, this.program.account.member.fetchNullable(memberPDA)];
                    case 1:
                        member = _a.sent();
                        if (!member)
                            return [2 /*return*/, ""];
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(member.owner)];
                    case 2:
                        treasury = _a.sent();
                        if (!treasury)
                            return [2 /*return*/, ""];
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(treasury === null || treasury === void 0 ? void 0 : treasury.owners[0].ownerPda)];
                    case 3:
                        buddy = _a.sent();
                        return [2 /*return*/, (buddy === null || buddy === void 0 ? void 0 : buddy.name) || ""];
                    case 4: return [2 /*return*/, referrerHash];
                }
            });
        });
    };
    Initializer.prototype.isReferrerMember = function (organizationName, referrer) {
        return __awaiter(this, void 0, void 0, function () {
            var owners, memberPDA;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!organizationName)
                            return [2 /*return*/, false];
                        if (!(referrer && !referrer.endsWith("$"))) return [3 /*break*/, 2];
                        owners = Client.decryptHash(referrer)[0];
                        memberPDA = getMemberPDA(this.program, organizationName.toLowerCase(), owners[0]);
                        return [4 /*yield*/, this.program.account.member.fetchNullable(memberPDA)];
                    case 1: return [2 /*return*/, !!(_a.sent())];
                    case 2: return [2 /*return*/, false];
                }
            });
        });
    };
    return Initializer;
}());
export { Initializer };
//# sourceMappingURL=Initializer.js.map